terra::plot(mnh2, axes = FALSE, legend = FALSE, main = a, col = pal)
ls[[paste0("an_", a)]] <- mnh2
}
do.call(c, ls)
}
spot_maj_mnh(ext, dos_spot, path_data, path_mnh, ans)
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, ans){
spot_data(dos_spot, ext, path_data, buffer = 100)
path_data <- file.path(system.file(package = "oiseauSpot"), "extdata")
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
spot_plotRGB(spots, mask = TRUE, overlay = ext)
# Correction MNH0: suppression des arbres présent sur le MNH mais sec ou disparus sur Spot
diff <- spot_differences(paths = path_spots, ext = ext, an = ans[1],
buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)")
spot_plotDiff(diff)
# Choix du seuil
valid <- FALSE
while(!valid){
seuil_an0 <- as.numeric(readline(paste(ans[1], ": Seuil choisi :")))
mask_mnh0 <- spot_perturbation(seuil_an0, diff = diff, liste_spots = spots, an = 2021,
overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
layout(matrix(c(1:2), nrow = 1))
pal <- colorRampPalette(c("white", "red"))(20)
mnh0 <- terra::rast(path_mnh) %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0, axes = FALSE, main = "avec morts", col = pal, legend = FALSE)
mnh0c <- mnh0 * mask_mnh0 %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0c, axes = FALSE, legend = FALSE, main = "sans morts", col = pal)
# Années suivantes
ls <- list(mnh0)
names(ls) <- paste0("an_", an[1])
for(a in ans[-1]){
diff <- spot_differences(paths = path_spots, ext = ext, an = a, buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh, formula = "(spot$ir - spot$r) / (spot$ir + spot$r)", mask_mnh = mask_mnh2021)
spot_plotDiff(diff)
valid <- FALSE
while(!valid){
seuil <- as.numeric(readline(paste(a, ": Seuil choisi :")))
mask_mnh <- spot_perturbation(seuil, diff = diff,liste_spots = spots, an = a, overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
mnh2 <- ls[[paste0("an_", a-1)]] * mask_mnh %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh2, axes = FALSE, legend = FALSE, main = a, col = pal)
ls[[paste0("an_", a)]] <- mnh2
}
do.call(c, ls)
}
new <- spot_maj_mnh(ext, dos_spot, path_data, path_mnh, ans)
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, ans){
spot_data(dos_spot, ext, path_data, buffer = 100)
path_data <- file.path(system.file(package = "oiseauSpot"), "extdata")
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
spot_plotRGB(spots, mask = TRUE, overlay = ext)
# Correction MNH0: suppression des arbres présent sur le MNH mais sec ou disparus sur Spot
diff <- spot_differences(paths = path_spots, ext = ext, an = ans[1],
buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)")
spot_plotDiff(diff)
# Choix du seuil
valid <- FALSE
while(!valid){
seuil_an0 <- as.numeric(readline(paste(ans[1], ": Seuil choisi :")))
mask_mnh0 <- spot_perturbation(seuil_an0, diff = diff, liste_spots = spots, an = 2021,
overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
layout(matrix(c(1:2), nrow = 1))
pal <- colorRampPalette(c("white", "red"))(20)
mnh0 <- terra::rast(path_mnh) %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0, axes = FALSE, main = "avec morts", col = pal, legend = FALSE)
mnh0c <- mnh0 * mask_mnh0 %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0c, axes = FALSE, legend = FALSE, main = "sans morts", col = pal)
ls <- list(mnh0)
names(ls) <- paste0("an_", ans[1])
# Années suivantes
for(a in ans[-1]){
diff <- spot_differences(paths = path_spots, ext = ext, an = a, buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh, formula = "(spot$ir - spot$r) / (spot$ir + spot$r)", mask_mnh = mask_mnh2021)
spot_plotDiff(diff)
valid <- FALSE
while(!valid){
seuil <- as.numeric(readline(paste(a, ": Seuil choisi :")))
mask_mnh <- spot_perturbation(seuil, diff = diff,liste_spots = spots, an = a, overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
mnh2 <- ls[[paste0("an_", a-1)]] * mask_mnh %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh2, axes = FALSE, legend = FALSE, main = a, col = pal)
ls[[paste0("an_", a)]] <- mnh2
}
do.call(c, ls)
}
spot_maj_mnh(ext, dos_spot, path_data, path_mnh, ans)
}
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, ans){
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, ans){
spot_data(dos_spot, ext, path_data, buffer = 100)
path_data <- file.path(system.file(package = "oiseauSpot"), "extdata")
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
spot_plotRGB(spots, mask = TRUE, overlay = ext)
# Correction MNH0: suppression des arbres présent sur le MNH mais sec ou disparus sur Spot
diff <- spot_differences(paths = path_spots, ext = ext, an = ans[1],
buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)")
spot_plotDiff(diff)
# Choix du seuil
valid <- FALSE
while(!valid){
seuil_an0 <- as.numeric(readline(paste(ans[1], ": Seuil choisi :")))
mask_mnh0 <- spot_perturbation(seuil_an0, diff = diff, liste_spots = spots, an = 2021,
overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
layout(matrix(c(1:2), nrow = 1))
pal <- colorRampPalette(c("white", "red"))(20)
ls <- list(mask_mnh0)
names(ls) <- paste0("an_", ans[1])
# Années suivantes
for(a in ans[-1]){
diff <- spot_differences(paths = path_spots, ext = ext, an = a, buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)",
mask_mnh = ls[[paste0("an_", a)]])
spot_plotDiff(diff)
valid <- FALSE
while(!valid){
seuil <- as.numeric(readline(paste(a, ": Seuil choisi :")))
mask_mnh <- spot_perturbation(seuil, diff = diff,liste_spots = spots, an = a, overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
ls[[paste0("an_", a)]] <- mask_mnh
}
layout(matrix(c(1:(length(ans) + 1)), nrow = 1))
mnh0 <- terra::rast(path_mnh) %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0, axes = FALSE, main = "avec morts", col = pal, legend = FALSE)
mnh0c <- mnh0 * mask_mnh0 %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0c, axes = FALSE, legend = FALSE, main = "sans morts", col = pal)
for(a in ans[-1]){
mnh <- mnh0 * ls[[paste0("an_", a)]] %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh, axes = FALSE, legend = FALSE, main = a, col = pal)
}
do.call(c, ls)
}
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, ans){
spot_maj_mnh(ext, dos_spot, path_data, path_mnh, ans)
# ext <- conf$shp %>% dplyr::filter(ug=="3 u")
# dos_spot <- "/var/partage2/spot6"
# path_data <- "/var/user/sdumas/test_spot"
# path_mnh <- "/var/partage2/lidar/ST-SULPICE/mnh1.tif"
an_mnh <- 2021
an_fin <- 2022
ans <- an_mnh:an_fin
ans
path_spots
path_data
spot_data(dos_spot, ext, path_data, buffer = 100)
path_data <- file.path(system.file(package = "oiseauSpot"), "extdata")
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
path_spots
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
path_spots
path_data
path_data <- "/var/user/sdumas/test_spot"
path_data <- "/var/user/sdumas/test_spot"
spot_data(dos_spot, ext, path_data, buffer = 100)
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
as.numeric("a")
#' @param ext sf de la zone
#' @param dos_spot dossier des images spot
#' @param path_data dossier où écrire les résultats
#' @param path_mnh chemin du MNH
#' @param an_mnh année du MNH
#' @param an_fin dernière année à mettre à jour
#'
#' @return liste des masques annuels à appliquer au MNT
#' @export
#'
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, an_mnh, an_fin){
#' @param ext sf de la zone
#' @param dos_spot dossier des images spot
#' @param path_data dossier où écrire les résultats
#' @param path_mnh chemin du MNH
#' @param an_mnh année du MNH
#' @param an_fin dernière année à mettre à jour
#'
#' @return liste des masques annuels à appliquer au MNT
#' @export
#'
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, an_mnh, an_fin){
# ext <- conf$shp %>% dplyr::filter(ug=="3 u")
# dos_spot <- "/var/partage2/spot6"
# path_data <- "/var/user/sdumas/test_spot"
# path_mnh <- "/var/partage2/lidar/ST-SULPICE/mnh1.tif"
# an_mnh <- 2021
# an_fin <- 2022
ans <- an_mnh:an_fin
spot_data(dos_spot, ext, path_data, buffer = 100)
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
# choix des images
# for(a in ans){
spot_a <- spots[[startsWith(names(spots), paste0("spot", a)]]
#' @param ext sf de la zone
#' @param dos_spot dossier des images spot
#' @param path_data dossier où écrire les résultats
#' @param path_mnh chemin du MNH
#' @param an_mnh année du MNH
#' @param an_fin dernière année à mettre à jour
#'
#' @return liste des masques annuels à appliquer au MNT
#' @export
#'
spot_maj_mnh <- function(ext, dos_spot, path_data, path_mnh, an_mnh, an_fin){
# ext <- conf$shp %>% dplyr::filter(ug=="3 u")
# dos_spot <- "/var/partage2/spot6"
# path_data <- "/var/user/sdumas/test_spot"
# path_mnh <- "/var/partage2/lidar/ST-SULPICE/mnh1.tif"
# an_mnh <- 2021
# an_fin <- 2022
ans <- an_mnh:an_fin
spot_data(dos_spot, ext, path_data, buffer = 100)
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# Tampon à appliquer autour de l'UG
buffer <- 10
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
# choix des images
# for(a in ans){
#   spot_a <- spots[[startsWith(names(spots), paste0("spot", a)]]
#   spot_plotRGB(spots, mask = TRUE, overlay = ext)
#
#   num <- as.numeric(readline(paste("Quelle image pour", a, "? 0 pour aucune ou 1 à", length(spot_a))))
#
#   while(!is.na(num) & num <= length(spot_a)){
#     num <- as.numeric(readline(paste("Entrée invalide. Quelle image pour", a, "? 0 pour aucune ou 1 à", length(spot_a))))
#   }
#
#   rem <- names(spot_a)
#   if(num > 0) rem <- rem[-num]
#
#   spots <- spots[!names(spots) %in% rem]
#
# }
# Correction MNH0: suppression des arbres présent sur le MNH mais sec ou disparus sur Spot
diff <- spot_differences(paths = path_spots, ext = ext, an = ans[1],
buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)")
spot_plotDiff(diff)
# Choix du seuil
valid <- FALSE
while(!valid){
seuil_an0 <- as.numeric(readline(paste(ans[1], ": Seuil choisi :")))
mask_mnh0 <- spot_perturbation(seuil_an0, diff = diff, liste_spots = spots, an = 2021,
overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
layout(matrix(c(1:2), nrow = 1))
pal <- colorRampPalette(c("white", "red"))(20)
ls <- list(mask_mnh0)
names(ls) <- paste0("an_", ans[1])
# Années suivantes
for(a in ans[-1]){
diff <- spot_differences(paths = path_spots, ext = ext, an = a, buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh,
formula = "(spot$ir - spot$r) / (spot$ir + spot$r)",
mask_mnh = ls[[paste0("an_", a)]])
spot_plotDiff(diff)
valid <- FALSE
while(!valid){
seuil <- as.numeric(readline(paste(a, ": Seuil choisi :")))
mask_mnh <- spot_perturbation(seuil, diff = diff,liste_spots = spots, an = a, overlay = ext, mask = TRUE)
valid <- askYesNo("Valider ?")
}
ls[[paste0("an_", a)]] <- mask_mnh
}
layout(matrix(c(1:(length(ans) + 1)), nrow = 1))
mnh0 <- terra::rast(path_mnh) %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0, axes = FALSE, main = "avec morts", col = pal, legend = FALSE)
mnh0c <- mnh0 * mask_mnh0 %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh0c, axes = FALSE, legend = FALSE, main = "sans morts", col = pal)
for(a in ans[-1]){
mnh <- mnh0 * ls[[paste0("an_", a)]] %>% terra::crop(ext) %>% terra::mask(ext %>% as("SpatVector"))
terra::plot(mnh, axes = FALSE, legend = FALSE, main = a, col = pal)
}
do.call(c, ls)
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
Q
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2018, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
ind_prec
ind
cr
formula
ind <- eval(parse(text = stringr::str_replace_all(formula, "spot", "spot_an")))
formula
eval
parse
stringr::str_replace_all(formula, "spot", "spot_an")
spot_an
spots
spot_an <- spots[[startsWith(names(spots), paste0("spot", an))]]
startsWith(names(spots), paste0("spot", an))
spot_an <- spots[startsWith(names(spots), paste0("spot", an))]
an_prec <- spot_an_prec(names(spots), an)
spot_an_prec <- spots[startsWith(names(spots), paste0("spot", an_prec))]
ind <- eval(parse(text = stringr::str_replace_all(formula, "spot", "spot_an")))
parse(text = stringr::str_replace_all(formula, "spot", "spot_an"))
spot_an <- spots[[startsWith(names(spots), paste0("spot", an))]]
spot_an <- spots[startsWith(names(spots), paste0("spot", an))][[1]]
spot_an_prec <- spots[startsWith(names(spots), paste0("spot", an_prec))][[1]]
ind <- eval(parse(text = stringr::str_replace_all(formula, "spot", "spot_an")))
ind_prec <- eval(parse(text = stringr::str_replace_all(formula, "spot", "spot_an_prec")))
ind_diff <- terra::scale(ind)-terra::scale(ind_prec)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
ind_prec <- eval(parse(text = stringr::str_replace_all(formula, "spot", "spot_an_prec")))
ind_diff <- terra::scale(ind)-terra::scale(ind_prec)
ind
ind_prec
parse(text = stringr::str_replace_all(formula, "spot", "spot_an_prec"))
spot_an_prec
spot_an
terra::crs(ind_prec) <- terra::crs(ind)
ind_diff <- terra::scale(ind)-terra::scale(ind_prec)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
source("~/.active-rstudio-document")
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
rm(spot_maj_mnh)
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
layout(matrix(c(1:(length(ans) + 1)), nrow = 1))
msk_ext <- ext %>% as("SpatVector")
crs0 <- terra::crs(msk_ext)
crs0
print(terra::crs(msk_ext))
mnh0 <- terra::rast(path_mnh) %>% terra::crop(ext) %>% terra::mask(msk_ext)
terra::plot(mnh0, axes = FALSE, main = "avec morts", col = pal, legend = FALSE)
terra::crs(mnh0) <- terra::crs(mask_mnh0) <- crs0
mnh0c <- mnh0 * mask_mnh0 %>% terra::crop(ext) %>% terra::mask(msk_ext)
mask_mnh0 %>% terra::crop(ext) %>% terra::mask(msk_ext)
mnh0
terra::plot(mnh0)
mask_mnh0 %>% terra::crop(ext) %>% terra::mask(msk_ext) %>% terra::plot()
mask_mnh0 %>% terra::crop(ext) %>% terra::mask(msk_ext)
mask_mnh0
diff
terra::plot(diff$`2021`)
layout(1)
terra::plot(diff$`2021`)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 8,
fig.height = 6, warning = FALSE, message = FALSE
)
library(oiseauSpot)
# Chunk 3
path_data <- file.path(system.file(package = "oiseauSpot"), "extdata")
# chemins vers les images SPOT 4 bandes à résolution 1.5m
path_spots <- list.files(path_data, pattern = "spot", full.names = TRUE)
names(path_spots) <- stringr::str_remove_all(basename(path_spots), "[a-z]|\\.")
# !!! nommer la liste des chemins avec l'année de prise de vue
path_spots
# chemin vers le MNH à résolution 1m, levé en 2021
path_mnh <- list.files(
file.path(system.file(package = "oiseauSpot"), "extdata"), pattern = "mnh", full.names = TRUE
)
an_mnh <- 2021
# shapefile des UG
shp <- sf::st_read(file.path(path_data, "ugs.shp"))
# Choix de l'UG à traiter
ugc <- "3 u"
ext <- shp %>% dplyr::filter(ug == ugc)
# Tampon à appliquer autour de l'UG
buffer <- 10
# Chunk 4
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
spot_plotRGB(spots, mask = TRUE, overlay = ext)
# Chunk 5
cr <- spot_crowns(path_mnh = path_mnh, ext = ext, buffer = buffer)
terra::plot(cr)
indices <- list(NDVI = "(spot$ir - spot$r) / (spot$ir + spot$r)",
logRatio = "log(spot$ir / spot$r)",
IPVI = "0.5 * spot$ir / spot$ir + spot$r * ((spot$r - spot$g) / (spot$r + spot$g) + 1)",
MCARI1 = "1.2 * (2.5 * (spot$ir - spot$r) - 1.3 * (spot$ir - spot$g))"
)
diff <- spot_differences(paths = path_spots, ext = ext, an = 2021, buffer = buffer, path_mnh = path_mnh, an_mnh = an_mnh, formula = indices["NDVI"])
spot_plotDiff(diff)
diff$`2020`
spots$spot2020
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer)
spots$spot20180623
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer, template = terra::rast(path_mnh))
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spots <- spot_get(paths = path_spots, ext = ext, buffer = buffer, template = terra::rast(path_mnh))
spots$spot20180623
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
test <- ras_dif
test[ras_dif < lim] <- 1
test[ras_dif >= lim] <- 0
terra::plot(ras_dif, col = colorRampPalette(c("green", "green", "yellow", "red"))(20),
main = paste("indice", an))
terra::contour(test, col=col, add = TRUE, lty = 1)
an_prec <- spot_an_prec(names(liste_spots), an)
spots <- purrr::map(liste_spots[paste("spot", c(an_prec, an), sep = "")], ~ terra::crop(.x, ras_dif))
layout(matrix(c(1,2), nrow = 1))
spot_plotRGB(spots, evo = test, sub = paste(sub, "\nseuil indic = ", lim),
horizontal = horizontal, overlay = overlay, mask = mask, col = col)
layout(1)
test
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
spots <- spot_get(paths, ext = ext)
spots$spot20180623
spot_maj_mnh(ext, dos_spot="/var/partage2/spot6", path_data="/var/user/sdumas/test_spot",
path_mnh="/var/partage2/lidar/ST-SULPICE/mnh1.tif", an_mnh=2021, an_fin=2022)
source("/var/user/sdumas/oiseauSpot/R/spot_maj_mnh.R")
